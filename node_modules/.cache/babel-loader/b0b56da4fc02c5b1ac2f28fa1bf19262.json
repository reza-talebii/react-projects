{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FIFA\\\\Documents\\\\GitHub\\\\react-projects\\\\src\\\\Components\\\\QuestionSection.jsx\";\nimport React from \"react\";\n\nconst QuestionSection = props => {\n  const indexQuestion = 0;\n  const {\n    questionText,\n    answerOptions\n  } = props.questions[indexQuestion];\n  console.log(questionText, answerOptions);\n\n  const answerHandler = correct => correct;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, \"Question \", indexQuestion), \"/\", props.questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, answerOptions.map(option => /*#__PURE__*/React.createElement(\"button\", {\n    key: option.answerText,\n    onClick: () => answerHandler(option.isCorrect),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, option.answerText))));\n};\n\nexport default QuestionSection;","map":{"version":3,"sources":["C:/Users/FIFA/Documents/GitHub/react-projects/src/Components/QuestionSection.jsx"],"names":["React","QuestionSection","props","indexQuestion","questionText","answerOptions","questions","console","log","answerHandler","correct","length","map","option","answerText","isCorrect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAMC,aAAa,GAAG,CAAtB;AAEA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCH,KAAK,CAACI,SAAN,CAAgBH,aAAhB,CAAxC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ,EAA0BC,aAA1B;;AACE,QAAMI,aAAa,GAAGC,OAAD,IAAWA,OAAhC;;AAGF,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBP,aAAhB,CADF,OACyCD,KAAK,CAACI,SAAN,CAAgBK,MADzD,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCP,YAAhC,CAJF,CADF,eAOE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,aAAa,CAACO,GAAd,CAAmBC,MAAD,iBACjB;AACE,IAAA,GAAG,EAAEA,MAAM,CAACC,UADd;AAEE,IAAA,OAAO,EAAE,MAAML,aAAa,CAACI,MAAM,CAACE,SAAR,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGF,MAAM,CAACC,UAJV,CADD,CADH,CAPF,CADF;AAoBD,CA5BD;;AA8BA,eAAeb,eAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst QuestionSection = (props) => {\r\n  const indexQuestion = 0;\r\n\r\n  const { questionText, answerOptions } = props.questions[indexQuestion];\r\n  console.log(questionText, answerOptions);\r\n    const answerHandler =(correct)=>correct \r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"question-section\">\r\n        <div className=\"question-count\">\r\n          <span>Question {indexQuestion}</span>/{props.questions.length}\r\n        </div>\r\n        <div className=\"question-text\">{questionText}</div>\r\n      </div>\r\n      <div className=\"answer-section\">\r\n        {answerOptions.map((option) => (\r\n          <button\r\n            key={option.answerText}\r\n            onClick={() => answerHandler(option.isCorrect)}\r\n          >\r\n            {option.answerText}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionSection;\r\n"]},"metadata":{},"sourceType":"module"}