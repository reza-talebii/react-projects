{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FIFA\\\\Documents\\\\GitHub\\\\react-projects\\\\src\\\\Components\\\\QuestionSection.jsx\";\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { QuestionContext } from \"../store/question-Context\";\n\nconst QuestionSection = () => {\n  // const questions = useContext(QuestionContext).questions;\n  // const endQuizHandler = useContext(QuestionContext).endQuizHandler;\n  // const setScore = useContext(QuestionContext).addScore;\n  // const handleAnswerOptionClick = (isCorrect) => isCorrect && setScore();\n  // const [currentQuestion, setCurrentQuestion] = useState(0);\n  // const nextQuestion = currentQuestion + 1;\n  // if (nextQuestion < questions.length) {\n  //   setCurrentQuestion(nextQuestion);\n  // } else {\n  //   endQuizHandler(true);\n  // }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, answerOption.answerText))));\n};\n\nexport default QuestionSection;","map":{"version":3,"sources":["C:/Users/FIFA/Documents/GitHub/react-projects/src/Components/QuestionSection.jsx"],"names":["useContext","useState","QuestionContext","QuestionSection","currentQuestion","questions","length","questionText","answerOptions","map","answerOption","handleAnswerOptionClick","isCorrect","answerText"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,2BAAhC;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBC,eAAe,GAAG,CAAlC,CADF,OAC+CC,SAAS,CAACC,MADzD,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,SAAS,CAACD,eAAD,CAAT,CAA2BG,YAD9B,CAJF,CADF,eAWE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,CAACD,eAAD,CAAT,CAA2BI,aAA3B,CAAyCC,GAAzC,CAA8CC,YAAD,iBAC5C;AACE,IAAA,OAAO,EAAE,MAAMC,uBAAuB,CAACD,YAAY,CAACE,SAAd,CADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGF,YAAY,CAACG,UAHhB,CADD,CADH,CAXF,CADF;AAuBD,CAvCD;;AAyCA,eAAeV,eAAf","sourcesContent":["import { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { QuestionContext } from \"../store/question-Context\";\r\n\r\nconst QuestionSection = () => {\r\n  // const questions = useContext(QuestionContext).questions;\r\n  // const endQuizHandler = useContext(QuestionContext).endQuizHandler;\r\n  // const setScore = useContext(QuestionContext).addScore;\r\n\r\n  // const handleAnswerOptionClick = (isCorrect) => isCorrect && setScore();\r\n\r\n  // const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\r\n  // const nextQuestion = currentQuestion + 1;\r\n  // if (nextQuestion < questions.length) {\r\n  //   setCurrentQuestion(nextQuestion);\r\n  // } else {\r\n  //   endQuizHandler(true);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"question-section\">\r\n        <div className=\"question-count\">\r\n          <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n        </div>\r\n        <div className=\"question-text\">\r\n          {questions[currentQuestion].questionText}\r\n        </div>\r\n      </div>\r\n\r\n      \r\n      <div className=\"answer-section\">\r\n        {questions[currentQuestion].answerOptions.map((answerOption) => (\r\n          <button\r\n            onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}\r\n          >\r\n            {answerOption.answerText}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionSection;\r\n"]},"metadata":{},"sourceType":"module"}