{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FIFA\\\\Documents\\\\GitHub\\\\react-projects\\\\src\\\\App.js\";\nimport React, { useContext, useState } from \"react\";\nimport ScoreSection from \"./Components/ScoreSection\";\nimport QuestionSection from \"./Components/QuestionSection\";\nimport { QuestionContext } from \"./store/question-Context\";\nexport default function App() {\n  const questions = useContext(QuestionContext).questions;\n  const endQuiz = useContext(QuestionContext).endQuiz;\n  const endQuizHandler = useContext(QuestionContext).endQuizHandler;\n  const setScore = useContext(QuestionContext).addScore;\n  const score = useContext(QuestionContext).score;\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      endQuizHandler(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, endQuiz ? /*#__PURE__*/React.createElement(ScoreSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(QuestionSection, {\n    currentQuestion: currentQuestion,\n    handleAnswerOptionClick: handleAnswerOptionClick,\n    questions: questions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/FIFA/Documents/GitHub/react-projects/src/App.js"],"names":["React","useContext","useState","ScoreSection","QuestionSection","QuestionContext","App","questions","endQuiz","endQuizHandler","setScore","addScore","score","currentQuestion","setCurrentQuestion","handleAnswerOptionClick","isCorrect","nextQuestion","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAMC,SAAS,GAAGN,UAAU,CAACI,eAAD,CAAV,CAA4BE,SAA9C;AACA,QAAMC,OAAO,GAAGP,UAAU,CAACI,eAAD,CAAV,CAA4BG,OAA5C;AACA,QAAMC,cAAc,GAAGR,UAAU,CAACI,eAAD,CAAV,CAA4BI,cAAnD;AACA,QAAMC,QAAQ,GAAGT,UAAU,CAACI,eAAD,CAAV,CAA4BM,QAA7C;AACA,QAAMC,KAAK,GAAGX,UAAU,CAACI,eAAD,CAAV,CAA4BO,KAA1C;AAEA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,CAAD,CAAtD;;AAEA,QAAMa,uBAAuB,GAAIC,SAAD,IAAe;AAC7C,QAAIA,SAAJ,EAAe;AACbN,MAAAA,QAAQ,CAACE,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,UAAMK,YAAY,GAAGJ,eAAe,GAAG,CAAvC;;AACA,QAAII,YAAY,GAAGV,SAAS,CAACW,MAA7B,EAAqC;AACnCJ,MAAAA,kBAAkB,CAACG,YAAD,CAAlB;AACD,KAFD,MAEO;AACLR,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GAXD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,gBACN,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,gBAGN,oBAAC,eAAD;AACE,IAAA,eAAe,EAAEK,eADnB;AAEE,IAAA,uBAAuB,EAAEE,uBAF3B;AAGE,IAAA,SAAS,EAAER,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF;AAaD","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport ScoreSection from \"./Components/ScoreSection\";\nimport QuestionSection from \"./Components/QuestionSection\";\nimport { QuestionContext } from \"./store/question-Context\";\n\nexport default function App() {\n  const questions = useContext(QuestionContext).questions;\n  const endQuiz = useContext(QuestionContext).endQuiz;\n  const endQuizHandler = useContext(QuestionContext).endQuizHandler;\n  const setScore = useContext(QuestionContext).addScore;\n  const score = useContext(QuestionContext).score;\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      endQuizHandler(true);\n    }\n  };\n  return (\n    <div className=\"app\">\n      {endQuiz ? (\n        <ScoreSection />\n      ) : (\n        <QuestionSection\n          currentQuestion={currentQuestion}\n          handleAnswerOptionClick={handleAnswerOptionClick}\n          questions={questions}\n        />\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}