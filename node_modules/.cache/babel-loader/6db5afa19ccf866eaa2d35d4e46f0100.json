{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FIFA\\\\Documents\\\\GitHub\\\\react-projects\\\\src\\\\Components\\\\QuestionSection.jsx\";\nimport React, { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { QuestionContext } from \"../store/question-Context\";\n\nconst QuestionSection = () => {\n  const questions = useContext(QuestionContext).questions;\n  const endQuizHandler = useContext(QuestionContext).endQuizHandler;\n  const setScore = useContext(QuestionContext).addScore;\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\n  const handleAnswerOptionClick = isCorrect => {\n    isCorrect && setScore();\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      endQuizHandler(true);\n    }\n  };\n\n  const {\n    questionText,\n    answerOptions\n  } = questions[currentQuestion];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, answerOption.answerText))));\n};\n\nexport default QuestionSection;","map":{"version":3,"sources":["C:/Users/FIFA/Documents/GitHub/react-projects/src/Components/QuestionSection.jsx"],"names":["React","useContext","useState","QuestionContext","QuestionSection","questions","endQuizHandler","setScore","addScore","currentQuestion","setCurrentQuestion","handleAnswerOptionClick","isCorrect","nextQuestion","length","questionText","answerOptions","map","answerOption","answerText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,2BAAhC;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAMC,SAAS,GAAGJ,UAAU,CAACE,eAAD,CAAV,CAA4BE,SAA9C;AACA,QAAMC,cAAc,GAAGL,UAAU,CAACE,eAAD,CAAV,CAA4BG,cAAnD;AACA,QAAMC,QAAQ,GAAGN,UAAU,CAACE,eAAD,CAAV,CAA4BK,QAA7C;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,CAAD,CAAtD;;AAEA,QAAMS,uBAAuB,GAAIC,SAAD,IAAe;AAC7CA,IAAAA,SAAS,IAAIL,QAAQ,EAArB;AACA,UAAMM,YAAY,GAAGJ,eAAe,GAAG,CAAvC;;AACA,QAAII,YAAY,GAAGR,SAAS,CAACS,MAA7B,EAAqC;AACnCJ,MAAAA,kBAAkB,CAACG,YAAD,CAAlB;AACD,KAFD,MAEO;AACLP,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GARD;;AAUA,QAAM;AAAES,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCX,SAAS,CAACI,eAAD,CAAjD;AAEA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBA,eAAe,GAAG,CAAlC,CADF,OAC+CJ,SAAS,CAACS,MADzD,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCC,YAAhC,CAJF,CADF,eAQE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,aAAa,CAACC,GAAd,CAAmBC,YAAD,iBACjB;AACE,IAAA,OAAO,EAAE,MAAMP,uBAAuB,CAACO,YAAY,CAACN,SAAd,CADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGM,YAAY,CAACC,UAHhB,CADD,CADH,CARF,CADF;AAoBD,CAtCD;;AAwCA,eAAef,eAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { QuestionContext } from \"../store/question-Context\";\r\n\r\nconst QuestionSection = () => {\r\n  const questions = useContext(QuestionContext).questions;\r\n  const endQuizHandler = useContext(QuestionContext).endQuizHandler;\r\n  const setScore = useContext(QuestionContext).addScore;\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\r\n  const handleAnswerOptionClick = (isCorrect) => {\r\n    isCorrect && setScore();\r\n    const nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestion(nextQuestion);\r\n    } else {\r\n      endQuizHandler(true);\r\n    }\r\n  };\r\n\r\n  const { questionText, answerOptions } = questions[currentQuestion];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"question-section\">\r\n        <div className=\"question-count\">\r\n          <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n        </div>\r\n        <div className=\"question-text\">{questionText}</div>\r\n      </div>\r\n\r\n      <div className=\"answer-section\">\r\n        {answerOptions.map((answerOption) => (\r\n          <button\r\n            onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}\r\n          >\r\n            {answerOption.answerText}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionSection;\r\n"]},"metadata":{},"sourceType":"module"}