{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FIFA\\\\Documents\\\\GitHub\\\\react-projects\\\\src\\\\Components\\\\QuestionSection.jsx\";\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { QuestionContext } from \"../store/question-Context\";\n\nconst QuestionSection = props => {\n  const questions = useContext(QuestionContext);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n  };\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const nextQuestion = currentQuestion + 1;\n\n  if (nextQuestion < questions.length) {\n    setCurrentQuestion(nextQuestion);\n  } else {\n    endQuizHandler(true);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, answerOption.answerText))));\n};\n\nexport default QuestionSection;","map":{"version":3,"sources":["C:/Users/FIFA/Documents/GitHub/react-projects/src/Components/QuestionSection.jsx"],"names":["useContext","useState","QuestionContext","QuestionSection","props","questions","handleAnswerOptionClick","isCorrect","setScore","score","currentQuestion","setCurrentQuestion","nextQuestion","length","endQuizHandler","questionText","answerOptions","map","answerOption","answerText"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,2BAAhC;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAMC,SAAS,GAAGL,UAAU,CAACE,eAAD,CAA5B;;AAGA,QAAMI,uBAAuB,GAAIC,SAAD,IAAe;AAC7C,QAAIA,SAAJ,EAAe;AACbC,MAAAA,QAAQ,CAACC,KAAK,GAAG,CAAT,CAAR;AACD;AACF,GAJD;;AAKA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,CAAD,CAAtD;AAEA,QAAMW,YAAY,GAAGF,eAAe,GAAG,CAAvC;;AACA,MAAIE,YAAY,GAAGP,SAAS,CAACQ,MAA7B,EAAqC;AACnCF,IAAAA,kBAAkB,CAACC,YAAD,CAAlB;AACD,GAFD,MAEO;AACLE,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD;;AAED,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBJ,eAAe,GAAG,CAAlC,CADF,OAC+CL,SAAS,CAACQ,MADzD,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,SAAS,CAACK,eAAD,CAAT,CAA2BK,YAD9B,CAJF,CADF,eASE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,SAAS,CAACK,eAAD,CAAT,CAA2BM,aAA3B,CAAyCC,GAAzC,CAA8CC,YAAD,iBAC5C;AACE,IAAA,OAAO,EAAE,MAAMZ,uBAAuB,CAACY,YAAY,CAACX,SAAd,CADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGW,YAAY,CAACC,UAHhB,CADD,CADH,CATF,CADF;AAqBD,CAvCD;;AAyCA,eAAehB,eAAf","sourcesContent":["import { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { QuestionContext } from \"../store/question-Context\";\r\n\r\nconst QuestionSection = (props) => {\r\n  const questions = useContext(QuestionContext)\r\n\r\n\r\n  const handleAnswerOptionClick = (isCorrect) => {\r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n  };\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\r\n  const nextQuestion = currentQuestion + 1;\r\n  if (nextQuestion < questions.length) {\r\n    setCurrentQuestion(nextQuestion);\r\n  } else {\r\n    endQuizHandler(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"question-section\">\r\n        <div className=\"question-count\">\r\n          <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n        </div>\r\n        <div className=\"question-text\">\r\n          {questions[currentQuestion].questionText}\r\n        </div>\r\n      </div>\r\n      <div className=\"answer-section\">\r\n        {questions[currentQuestion].answerOptions.map((answerOption) => (\r\n          <button\r\n            onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}\r\n          >\r\n            {answerOption.answerText}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionSection;\r\n"]},"metadata":{},"sourceType":"module"}